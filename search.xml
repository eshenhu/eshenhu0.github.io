<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[don't use memset() init your struct]]></title>
      <url>/2017/06/04/don-t-use-memset-init-your-struct/</url>
      <content type="html"><![CDATA[<h2 id="Don’t-use-memset-init-your-struct"><a href="#Don’t-use-memset-init-your-struct" class="headerlink" title="Don’t use memset init your struct"></a>Don’t use memset init your struct</h2><p>Even in some open source project, we always see <code>memset</code> filled in the code, here I had like give the reason why we should not use <code>memset</code> if possible.</p>
<a id="more"></a>
<ul>
<li><p><code>memset</code> was subject to give side-effect to your code.<br><a href="http://en.cppreference.com/w/c/string/byte/memset" target="_blank" rel="external">memset description</a><br>In some projects, <code>memset</code> was used to flush the struct,<br>like the example given here <a href="https://linux.die.net/man/2/bind" target="_blank" rel="external">bind example given in die.net</a></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> sfd, cfd;</div><div class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_un</span> <span class="title">my_addr</span>, <span class="title">peer_addr</span>;</span></div><div class="line">    ...</div><div class="line">    <span class="built_in">memset</span>(&amp;my_addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(struct sockaddr_un));</div><div class="line">                        <span class="comment">/* Clear structure */</span></div><div class="line">   ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>memset</code> will flush with byte by byte in your raw memory. in such situations, only <code>0</code> or possible <code>0xFF</code> was allowed, otherwise you will get some results more than what you expected.<br>Some examples like this one: <a href="http://stackoverflow.com/questions/7202411/why-does-memsetarr-1-sizeofarr-sizeofint-not-clear-an-integer-array-t" target="_blank" rel="external">good example</a></p>
</li>
<li><p><code>memset</code> was not efficient than the other solution.<br><code>memset</code> will have one function call  when use it.<br>I will take this struct as example:</p>
<img src="/2017/06/04/don-t-use-memset-init-your-struct/example.png" alt="example code" title="example code">
<p>Disassemble code on the x86-64 arch machine.</p>
<img src="/2017/06/04/don-t-use-memset-init-your-struct/disassemble-01.png" alt="disassemble-01" title="disassemble-01">
<p>how we handle this with more elegant manner?<br>Use initlization!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">struct sockaddr_un myaddr = &#123;&#125;;</div></pre></td></tr></table></figure>
<p>Have a look at the disassemble code:</p>
<img src="/2017/06/04/don-t-use-memset-init-your-struct/disassemble-02.png" alt="disassemble-02" title="disassemble-02">
<p>Oops, it just use less code to finish this flush operation!</p>
<p>Don’t use memset anymore!</p>
</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Language </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/06/04/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>

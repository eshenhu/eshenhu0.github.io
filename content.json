{"meta":{"title":"eshenhu's blog","subtitle":null,"description":"It never be later than do nothing","author":"eshenhu","url":"https://eshenhu.github.io"},"pages":[],"posts":[{"title":"don't use memset() init your struct","slug":"don-t-use-memset-init-your-struct","date":"2017-06-04T14:17:59.000Z","updated":"2017-06-04T15:58:53.000Z","comments":true,"path":"2017/06/04/don-t-use-memset-init-your-struct/","link":"","permalink":"https://eshenhu.github.io/2017/06/04/don-t-use-memset-init-your-struct/","excerpt":"Don’t use memset init your structEven in some open source project, we always see memset filled in the code, here I had like give the reason why we should not use memset if possible.","text":"Don’t use memset init your structEven in some open source project, we always see memset filled in the code, here I had like give the reason why we should not use memset if possible. memset was subject to give side-effect to your code.memset descriptionIn some projects, memset was used to flush the struct,like the example given here bind example given in die.net 123456789int main(int argc, char *argv[])&#123; int sfd, cfd; struct sockaddr_un my_addr, peer_addr; ... memset(&amp;my_addr, 0, sizeof(struct sockaddr_un)); /* Clear structure */ ...&#125; memset will flush with byte by byte in your raw memory. in such situations, only 0 or possible 0xFF was allowed, otherwise you will get some results more than what you expected.Some examples like this one: good example memset was not efficient than the other solution.memset will have one function call when use it.I will take this struct as example: Disassemble code on the x86-64 arch machine. how we handle this with more elegant manner?Use initlization! 1struct sockaddr_un myaddr = &#123;&#125;; Have a look at the disassemble code: Oops, it just use less code to finish this flush operation! Don’t use memset anymore!","categories":[],"tags":[{"name":"Language","slug":"Language","permalink":"https://eshenhu.github.io/tags/Language/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-06-04T04:27:23.000Z","updated":"2017-06-04T04:27:23.000Z","comments":true,"path":"2017/06/04/hello-world/","link":"","permalink":"https://eshenhu.github.io/2017/06/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}